//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GIC.ATSWcfService.ATSServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SerachGOPRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class SerachGOPRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ASNIDField;
        
        private string CatalogField;
        
        private string CountryField;
        
        private System.Nullable<System.DateTime> EstimatedArrivalField;
        
        private string PartNoField;
        
        private string SKUNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ASNID {
            get {
                return this.ASNIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ASNIDField, value) != true)) {
                    this.ASNIDField = value;
                    this.RaisePropertyChanged("ASNID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Catalog {
            get {
                return this.CatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogField, value) != true)) {
                    this.CatalogField = value;
                    this.RaisePropertyChanged("Catalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> EstimatedArrival {
            get {
                return this.EstimatedArrivalField;
            }
            set {
                if ((this.EstimatedArrivalField.Equals(value) != true)) {
                    this.EstimatedArrivalField = value;
                    this.RaisePropertyChanged("EstimatedArrival");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PartNo {
            get {
                return this.PartNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNoField, value) != true)) {
                    this.PartNoField = value;
                    this.RaisePropertyChanged("PartNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SKUNo {
            get {
                return this.SKUNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUNoField, value) != true)) {
                    this.SKUNoField = value;
                    this.RaisePropertyChanged("SKUNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FetchGOPOnHandInTransitResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class FetchGOPOnHandInTransitResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GIC.ATSWcfService.ATSServiceReference.OnHandInTransit[] OnHandInTransitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GIC.ATSWcfService.ATSServiceReference.OnHandInTransit[] OnHandInTransit {
            get {
                return this.OnHandInTransitField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHandInTransitField, value) != true)) {
                    this.OnHandInTransitField = value;
                    this.RaisePropertyChanged("OnHandInTransit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnHandInTransit", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class OnHandInTransit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ASNIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InTransitQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnHandDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SKUNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ASNID {
            get {
                return this.ASNIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ASNIDField, value) != true)) {
                    this.ASNIDField = value;
                    this.RaisePropertyChanged("ASNID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((this.CatalogIDField.Equals(value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalogs {
            get {
                return this.CatalogsField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogsField, value) != true)) {
                    this.CatalogsField = value;
                    this.RaisePropertyChanged("Catalogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((this.IdentifierField.Equals(value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InTransitQty {
            get {
                return this.InTransitQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.InTransitQtyField, value) != true)) {
                    this.InTransitQtyField = value;
                    this.RaisePropertyChanged("InTransitQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnHandDetails {
            get {
                return this.OnHandDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHandDetailsField, value) != true)) {
                    this.OnHandDetailsField = value;
                    this.RaisePropertyChanged("OnHandDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHandQtyField, value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNo {
            get {
                return this.PartNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNoField, value) != true)) {
                    this.PartNoField = value;
                    this.RaisePropertyChanged("PartNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SKUNo {
            get {
                return this.SKUNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUNoField, value) != true)) {
                    this.SKUNoField = value;
                    this.RaisePropertyChanged("SKUNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
        "ct")]
    [System.SerializableAttribute()]
    public partial class ATSFaultDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnHandRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class OnHandRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((this.IdentifierField.Equals(value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FetchOnHandResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class FetchOnHandResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GIC.ATSWcfService.ATSServiceReference.OnHandLocationQty[] OnHandLocationQtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GIC.ATSWcfService.ATSServiceReference.OnHandLocationQty[] OnHandLocationQty {
            get {
                return this.OnHandLocationQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHandLocationQtyField, value) != true)) {
                    this.OnHandLocationQtyField = value;
                    this.RaisePropertyChanged("OnHandLocationQty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnHandLocationQty", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class OnHandLocationQty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnHandQtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((this.OnHandQtyField.Equals(value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InTransitRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class InTransitRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ProductIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FetchInTransitResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class FetchInTransitResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GIC.ATSWcfService.ATSServiceReference.InTransitQty[] InTransitQtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GIC.ATSWcfService.ATSServiceReference.InTransitQty[] InTransitQty {
            get {
                return this.InTransitQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.InTransitQtyField, value) != true)) {
                    this.InTransitQtyField = value;
                    this.RaisePropertyChanged("InTransitQty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InTransitQty", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class InTransitQty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ASNIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstimatedArrivalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventryOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MergeCentreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipFromFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransportModeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ASNID {
            get {
                return this.ASNIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ASNIDField, value) != true)) {
                    this.ASNIDField = value;
                    this.RaisePropertyChanged("ASNID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIDField, value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstimatedArrival {
            get {
                return this.EstimatedArrivalField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimatedArrivalField, value) != true)) {
                    this.EstimatedArrivalField = value;
                    this.RaisePropertyChanged("EstimatedArrival");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventryOwner {
            get {
                return this.InventryOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.InventryOwnerField, value) != true)) {
                    this.InventryOwnerField = value;
                    this.RaisePropertyChanged("InventryOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MergeCentreName {
            get {
                return this.MergeCentreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MergeCentreNameField, value) != true)) {
                    this.MergeCentreNameField = value;
                    this.RaisePropertyChanged("MergeCentreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNO {
            get {
                return this.PartNOField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNOField, value) != true)) {
                    this.PartNOField = value;
                    this.RaisePropertyChanged("PartNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((object.ReferenceEquals(this.QtyField, value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SKU {
            get {
                return this.SKUField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUField, value) != true)) {
                    this.SKUField = value;
                    this.RaisePropertyChanged("SKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipFromFacility {
            get {
                return this.ShipFromFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipFromFacilityField, value) != true)) {
                    this.ShipFromFacilityField = value;
                    this.RaisePropertyChanged("ShipFromFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransportMode {
            get {
                return this.TransportModeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransportModeField, value) != true)) {
                    this.TransportModeField = value;
                    this.RaisePropertyChanged("TransportMode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FullfillmentfacilityResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class FullfillmentfacilityResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GIC.ATSWcfService.ATSServiceReference.Fullfillmentfacility[] FullfillmentfacilityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GIC.ATSWcfService.ATSServiceReference.Fullfillmentfacility[] Fullfillmentfacility {
            get {
                return this.FullfillmentfacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FullfillmentfacilityField, value) != true)) {
                    this.FullfillmentfacilityField = value;
                    this.RaisePropertyChanged("Fullfillmentfacility");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fullfillmentfacility", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.GOP")]
    [System.SerializableAttribute()]
    public partial class Fullfillmentfacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string facilitycodeField;
        
        private int locationidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string facilitycode {
            get {
                return this.facilitycodeField;
            }
            set {
                if ((object.ReferenceEquals(this.facilitycodeField, value) != true)) {
                    this.facilitycodeField = value;
                    this.RaisePropertyChanged("facilitycode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int locationid {
            get {
                return this.locationidField;
            }
            set {
                if ((this.locationidField.Equals(value) != true)) {
                    this.locationidField = value;
                    this.RaisePropertyChanged("locationid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.dell.com/AvailableToSell/Services/GOP", ConfigurationName="ATSServiceReference.GOPService")]
    public interface GOPService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchGOPOnHandInT" +
            "ransit", ReplyAction="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchGOPOnHandInT" +
            "ransitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GIC.ATSWcfService.ATSServiceReference.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchGOPOnHandInT" +
            "ransitATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        GIC.ATSWcfService.ATSServiceReference.FetchGOPOnHandInTransitResponse FetchGOPOnHandInTransit(GIC.ATSWcfService.ATSServiceReference.SerachGOPRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchOnHand", ReplyAction="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchOnHandRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(GIC.ATSWcfService.ATSServiceReference.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchOnHandATSFau" +
            "ltDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        GIC.ATSWcfService.ATSServiceReference.FetchOnHandResponse FetchOnHand(GIC.ATSWcfService.ATSServiceReference.OnHandRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchInTransit", ReplyAction="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchInTransitRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GIC.ATSWcfService.ATSServiceReference.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/FetchInTransitATS" +
            "FaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        GIC.ATSWcfService.ATSServiceReference.FetchInTransitResponse FetchInTransit(GIC.ATSWcfService.ATSServiceReference.InTransitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/GetFullFillmentLo" +
            "cations", ReplyAction="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/GetFullFillmentLo" +
            "cationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GIC.ATSWcfService.ATSServiceReference.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Services/GOP/GOPService/GetFullFillmentLo" +
            "cationsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        GIC.ATSWcfService.ATSServiceReference.FullfillmentfacilityResponse GetFullFillmentLocations();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GOPServiceChannel : GIC.ATSWcfService.ATSServiceReference.GOPService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GOPServiceClient : System.ServiceModel.ClientBase<GIC.ATSWcfService.ATSServiceReference.GOPService>, GIC.ATSWcfService.ATSServiceReference.GOPService {
        
        public GOPServiceClient() {
        }
        
        public GOPServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GOPServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GOPServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GOPServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GIC.ATSWcfService.ATSServiceReference.FetchGOPOnHandInTransitResponse FetchGOPOnHandInTransit(GIC.ATSWcfService.ATSServiceReference.SerachGOPRequest request) {
            return base.Channel.FetchGOPOnHandInTransit(request);
        }
        
        public GIC.ATSWcfService.ATSServiceReference.FetchOnHandResponse FetchOnHand(GIC.ATSWcfService.ATSServiceReference.OnHandRequest request) {
            return base.Channel.FetchOnHand(request);
        }
        
        public GIC.ATSWcfService.ATSServiceReference.FetchInTransitResponse FetchInTransit(GIC.ATSWcfService.ATSServiceReference.InTransitRequest request) {
            return base.Channel.FetchInTransit(request);
        }
        
        public GIC.ATSWcfService.ATSServiceReference.FullfillmentfacilityResponse GetFullFillmentLocations() {
            return base.Channel.GetFullFillmentLocations();
        }
    }
}
